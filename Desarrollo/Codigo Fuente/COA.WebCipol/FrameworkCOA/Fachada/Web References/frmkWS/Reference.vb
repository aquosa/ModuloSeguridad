'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.1008
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.1008.
'
Namespace frmkWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="AuditarExcepcionSoap", [Namespace]:="http://tempuri.org/PIVEAuditWS/Service1")>  _
    Partial Public Class AuditarExcepcion
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private PublicarExcepcionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Fachada.My.MySettings.Default.frmkFachada_frmkWS_AuditarExcepcion
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event PublicarExcepcionCompleted As PublicarExcepcionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PIVEAuditWS/Service1/PublicarExcepcion", RequestNamespace:="http://tempuri.org/PIVEAuditWS/Service1", ResponseNamespace:="http://tempuri.org/PIVEAuditWS/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub PublicarExcepcion(ByVal Usuario As String, ByVal PC As String, ByVal Excepcion As String)
            Me.Invoke("PublicarExcepcion", New Object() {Usuario, PC, Excepcion})
        End Sub
        
        '''<remarks/>
        Public Function BeginPublicarExcepcion(ByVal Usuario As String, ByVal PC As String, ByVal Excepcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PublicarExcepcion", New Object() {Usuario, PC, Excepcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndPublicarExcepcion(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PublicarExcepcionAsync(ByVal Usuario As String, ByVal PC As String, ByVal Excepcion As String)
            Me.PublicarExcepcionAsync(Usuario, PC, Excepcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PublicarExcepcionAsync(ByVal Usuario As String, ByVal PC As String, ByVal Excepcion As String, ByVal userState As Object)
            If (Me.PublicarExcepcionOperationCompleted Is Nothing) Then
                Me.PublicarExcepcionOperationCompleted = AddressOf Me.OnPublicarExcepcionOperationCompleted
            End If
            Me.InvokeAsync("PublicarExcepcion", New Object() {Usuario, PC, Excepcion}, Me.PublicarExcepcionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPublicarExcepcionOperationCompleted(ByVal arg As Object)
            If (Not (Me.PublicarExcepcionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PublicarExcepcionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub PublicarExcepcionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
